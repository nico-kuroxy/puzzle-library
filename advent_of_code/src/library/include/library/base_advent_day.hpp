/**
 * @file base_advent_day.hpp
 * @author nicolas.erbetti.k@gmail.com
 * @brief This file defines the header of the general library used for the Advent of Code challenge.
 * @copyright Â© 2025 Nicolas Erbetti
 */

#ifndef _LIBRARY_BASE_ADVENT_DAY_HPP_
#define _LIBRARY_BASE_ADVENT_DAY_HPP_

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///> DEPENDENCIES
//> C/C++ libraries
#include <string>
//> Custom-made libraries
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///> GLOBAL VARIABLES
//> ATOMIC VARIABLES
//> OTHERS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///> CLASS DECLARATION
class BaseAdventDay {
/**
 * @class BaseAdventDay
 * @brief A base class for each day of the Advent of Code calendar.
 *
 * Provides a virtual interface that all day-specific subclasses should implement.
 */

 public:
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///> CONSTRUCTORS
    /**
     * @brief Constructor of the class. Declared as explicit to prevent ambiguous instantiation.
     * @param _filename The name of the input file.
     */
    explicit BaseAdventDay(std::string _filename);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///> DESTRUCTORS
    /**
     * @brief Destructor of the class.
     */
    ~BaseAdventDay();
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///> FUNCTIONS
    /**
     * @brief Run the code to process the input list.
     * @details Declared as purely virtual to enforce implementation in derived classes.
     * @return Status code (0 = success, non-zero = failure).
     */
    virtual int run() = 0;
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///> ACCESSORS
    //> GETTERS
    //> SETTERS
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 protected:
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ///> GENERAL ATTRIBUTES
    //> DYNAMIC / They can change during runtime.
    /**
     * @brief The name of the file containing the data to process.
     */
    std::string filename_;
    //> FIXED / They cannot change during runtime. Declared as const.
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif  // _LIBRARY_BASE_ADVENT_DAY_HPP_
